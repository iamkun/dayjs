diff --git a/node_modules/@semantic-release/github/lib/success.js b/node_modules/@semantic-release/github/lib/success.js
index 29c8def..576c68a 100644
--- a/node_modules/@semantic-release/github/lib/success.js
+++ b/node_modules/@semantic-release/github/lib/success.js
@@ -15,6 +15,8 @@ import getReleaseLinks from "./get-release-links.js";
 const debug = debugFactory("semantic-release:github");
 
 export default async function success(pluginConfig, context, { Octokit }) {
+  console.log('pluginConfig: ', pluginConfig);
+  console.log('context: ', context);
   const {
     options: { repositoryUrl },
     commits,
@@ -37,6 +39,21 @@ export default async function success(pluginConfig, context, { Octokit }) {
     releasedLabels,
     addReleases,
   } = resolveConfig(pluginConfig, context);
+  console.log('resolveConfig', {
+    githubToken,
+    githubUrl,
+    githubApiPathPrefix,
+    githubApiUrl,
+    proxy,
+    labels,
+    successComment,
+    successCommentCondition,
+    failTitle,
+    failComment,
+    failCommentCondition,
+    releasedLabels,
+    addReleases,
+  })
 
   const octokit = new Octokit(
     toOctokitOptions({
@@ -74,17 +91,21 @@ export default async function success(pluginConfig, context, { Octokit }) {
     );
     const releaseInfos = releases.filter((release) => Boolean(release.name));
     const shas = commits.map(({ hash }) => hash);
+    console.log('shas: ', shas);
 
     // Get associatedPRs
     const associatedPRs = await inChunks(shas, 100, async (chunk) => {
+      console.log('chunk: ', chunk);
       const responsePRs = [];
       const { repository } = await octokit.graphql(
         buildAssociatedPRsQuery(chunk),
         { owner, repo },
       );
+      console.log('repository: ', repository);
       const responseAssociatedPRs = Object.values(repository).map(
         (item) => item.associatedPullRequests,
       );
+      console.log('responseAssociatedPRs: ', responseAssociatedPRs);
       for (const { nodes, pageInfo } of responseAssociatedPRs) {
         if (nodes.length === 0) continue;
 
@@ -116,8 +137,10 @@ export default async function success(pluginConfig, context, { Octokit }) {
     });
 
     const uniqueAssociatedPRs = uniqBy(flatten(associatedPRs), "number");
+    console.log('uniqueAssociatedPRs: ', uniqueAssociatedPRs);
 
     const prs = await pFilter(uniqueAssociatedPRs, async ({ number }) => {
+      console.log('number: ', number);
       const commits = await octokit.paginate(
         "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
         {
@@ -539,6 +562,7 @@ const loadSingleCommitAssociatedPRs = `#graphql
  * @returns {object[]}
  */
 function buildIssuesOrPRsFromResponseNode(responseNodes) {
+  console.log('responseNodes: ', responseNodes);
   const resultArray = [];
   for (const node of responseNodes) {
     let baseProps = {
